distinct(Patient_ID, .keep_all = TRUE)
sample_list = c(cbtn_bs_tbl$Specimen_ID, sj_bs_tbl$Sample_ID)
return(sample_list)
}
deduplicated_samples <- get_deduplicated_biospecimens()
deduplicated_amplicons <- ampanalysis %>% filter(sample_ID %in% deduplicated_samples)
# aggregate other tumor types into "other"
specific_tumor_types <- c("LGG", "ACT", "CPC", "ETMR", "CPG", "EP", "EPD", "GG", "HGG", "MB", "MPNST", "NBL", "NFP", "OS", "PB", "RB", "RHB")
deduplicated_amplicons <- deduplicated_amplicons %>%
mutate(cancer_type = case_when(cancer_type %in% specific_tumor_types ~ cancer_type,
TRUE ~ "other"))
# setdiff(tumorfiltered, tumorfilteredosc)
# OSC: Diff is SJOS010_M (primary is available), BS_QG6V29H7BS (<- typo in biosample name?), and the cell lines BS_AFBPM6CN, BS_JGKRN7NA, BS_XMP9XNR9, and BS_4DQAQFQH
View(deduplicated_amplicons)
View(deduplicated_amplicons)
#Read in CBTN file
CBTNsurv <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/cbtn/PedPanCancer_CBTN_SurvAnalysis.xlsx")
#Editing CBTN survival files
CBTNsurvallfiltered <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/cbtn/PedPanCancer_CBTN_SurvAnalysis.xlsx", na = na_strings)
CBTNsurvallfiltered <- CBTNsurvallfiltered[!(is.na(CBTNsurvallfiltered$OS_Months)) & !(is.na(CBTNsurvallfiltered$OS_Status)),]
#CBTN - select cancer types that have at least one ecDNA sample
CBTNsurvallfiltered2 <- subset(CBTNsurvallfiltered, Cancer_Type_Abbrev == "ACT" | Cancer_Type_Abbrev == "BT" | Cancer_Type_Abbrev == "CPC" | Cancer_Type_Abbrev == "CPG" | Cancer_Type_Abbrev == "HGG" | Cancer_Type_Abbrev == "EP" | Cancer_Type_Abbrev == "ETMR" | Cancer_Type_Abbrev == "GG" | Cancer_Type_Abbrev == "LGG" | Cancer_Type_Abbrev == "MB" | Cancer_Type_Abbrev == "MPNST" | Cancer_Type_Abbrev == "MST" | Cancer_Type_Abbrev == "NBL" | Cancer_Type_Abbrev == "OS" | Cancer_Type_Abbrev == "PB" | Cancer_Type_Abbrev == "RB" | Cancer_Type_Abbrev == "RHB" | Cancer_Type_Abbrev == "ST")
#Plotting CBTN overall survival
CBTNfitecDNA <- survfit(Surv(OS_Months, OS_Status) ~ ecDNA, data = CBTNsurvallfiltered2)
plot(CBTNfitecDNA, col = c("red", "blue"), xlab = "Months", ylab="Survival", lwd = 2)
legend(x=60, y=1, c("ecDNA- (n = 295)", "ecDNA+ (n = 50)"), col = c("red", "blue"), lty=c(1,1))
survdiff(Surv(OS_Months, OS_Status) ~ ecDNA, data = CBTNsurvallfiltered2)
ggsurvplot(CBTNfitecDNA, conf.int=TRUE, pval=TRUE, risk.table=TRUE,
legend.labs=c("ecDNA-", "ecDNA+"), legend.title="ecDNA status",
palette=c("dodgerblue2", "orchid2"),
title="Kaplan-Meier Curve for Pediatric cancer survival by ecDNA status",
risk.table.height=.15)
summary(CBTNfitecDNA)
#Read in SJ files
SJsurv <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/stjude/survival_data/SJ_SurvivalAnalysis.xlsx", na = na_strings)
Mastersurv <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/stjude/survival_data/SJ_SurvivalMaster.xlsx", na = na_strings)
#remove all blank spaces in my excel sheets (one excel pressed Ctrl+space and then find and replace, replaced space with nothing)
#merging the SJ survival data and the ecDNA data
SJsurvmerged <- left_join(SJsurv, Mastersurv, by="Sample_ID")
SJsurvmergedfilter <- SJsurvmerged[!(is.na(SJsurvmerged$"Overall Survival in Months")) & !(is.na(SJsurvmerged$"Survival Status")),]
#removing m from Overall Survival in Months
SJsurvmergedfilter$"Overall Survival in Months"<-gsub("m","",as.character(SJsurvmergedfilter$"Overall Survival in Months"))
SJsurvmergedfilter$"Survival Status"<-gsub("Expired","1",as.character(SJsurvmergedfilter$"Survival Status"))
SJsurvmergedfilter$"Survival Status"<-gsub("Alive","0",as.character(SJsurvmergedfilter$"Survival Status"))
#select only columns that are needed
SJsurvmergedfilter1 <- subset(SJsurvmergedfilter, select = c("Sample_ID", "Patient_ID", "tumor_type", "ecDNA", "Survival Status", "Overall Survival in Months"))
names(SJsurvmergedfilter1) = c("Sample_ID", "Patient_ID", "Cancer_Type_Abbrev", "ecDNA", "OS_Status", "OS_Months")
#select only tumor types that have at least 1 ecDNA sample
SJsurvmergedfilter2 <- subset(SJsurvmergedfilter1, Cancer_Type_Abbrev == "ACT" | Cancer_Type_Abbrev == "BT" | Cancer_Type_Abbrev == "CPC" | Cancer_Type_Abbrev == "CPG" | Cancer_Type_Abbrev == "HGG" | Cancer_Type_Abbrev == "EP" | Cancer_Type_Abbrev == "ETMR" | Cancer_Type_Abbrev == "GG" | Cancer_Type_Abbrev == "LGG" | Cancer_Type_Abbrev == "MB" | Cancer_Type_Abbrev == "MPNST" | Cancer_Type_Abbrev == "MST" | Cancer_Type_Abbrev == "NBL" | Cancer_Type_Abbrev == "OS"| Cancer_Type_Abbrev == "PB" | Cancer_Type_Abbrev == "RB" | Cancer_Type_Abbrev == "RHB" | Cancer_Type_Abbrev == "ST")
#Converting OS_Months to integers
SJsurvmergedfilter2$OS_Months <- lapply(SJsurvmergedfilter2$OS_Months, as.integer)
#Converting integer to numeric
SJsurvmergedfilter2$OS_Months <- as.numeric(as.integer(SJsurvmergedfilter2$OS_Months))
SJsurvmergedfilter2$OS_Status <- as.numeric(as.character(SJsurvmergedfilter2$OS_Status))
#Determine duplicate patient values
dupes <- SJsurvmergedfilter2 %>% get_dupes(Patient_ID)
#select rows with unique patient IDs
SJsurvmergedfilter3 <- SJsurvmergedfilter2 %>% distinct(Patient_ID, .keep_all = TRUE)
#Adding OS censored at 5 yrs mark
SJsurvmergedfilter3 <- cbind(SJsurvmergedfilter3,SJsurvmergedfilter3[,5])
SJsurvmergedfilter3 <- cbind(SJsurvmergedfilter3,SJsurvmergedfilter3[,6])
names(SJsurvmergedfilter3) = c("Sample_ID", "Patient_ID", "Cancer_Type_Abbrev", "ecDNA", "OS_Status", "OS_Months", "OS_Status_5yrCensor", "OS_Months_5yrCensor")
SJsurvmergedfilter3$OS_Status_5yrCensor[SJsurvmergedfilter3$OS_Months >=60] <- 0
SJsurvmergedfilter3$OS_Months_5yrCensor[SJsurvmergedfilter3$OS_Months >=60] <- 60
#Plotting overall survival for SJ cohort
SJfitecDNA <- survfit(Surv(OS_Months, OS_Status) ~ ecDNA, data = SJsurvmergedfilter3)
plot(SJfitecDNA, col = c("red", "blue"), xlab = "Months", ylab="Survival", lwd = 2)
legend(x=60, y=1, c("ecDNA- (n = 397)", "ecDNA+ (n = 75)"), col = c("red", "blue"), lty=c(1,1))
survdiff(Surv(OS_Months, OS_Status) ~ ecDNA, data = SJsurvmergedfilter3)
ggsurvplot(SJfitecDNA, conf.int=TRUE, pval=TRUE, risk.table=TRUE,
legend.labs=c("ecDNA-", "ecDNA+"), legend.title="ecDNA status",
palette=c("dodgerblue2", "orchid2"),
title="Kaplan-Meier Curve for Pediatric cancer survival by ecDNA status",
risk.table.height=.15)
summary(SJfitecDNA)
#Plotting overall survival for SJ cohort, censored at 5 yrs
SJfitecDNAcensor <- survfit(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ ecDNA, data = SJsurvmergedfilter3)
plot(SJfitecDNAcensor, col = c("red", "blue"), xlab = "Months", ylab="Survival", lwd = 2)
legend(x=60, y=1, c("ecDNA- (n = 397)", "ecDNA+ (n = 75)"), col = c("red", "blue"), lty=c(1,1))
survdiff(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ ecDNA, data = SJsurvmergedfilter3)
ggsurvplot(SJfitecDNAcensor, conf.int=TRUE, pval=TRUE, risk.table=TRUE,
legend.labs=c("ecDNA-", "ecDNA+"), legend.title="ecDNA status",
palette=c("dodgerblue2", "orchid2"),
title="Kaplan-Meier Curve for Pediatric cancer survival by ecDNA status",
risk.table.height=.15)
SJres.cox <- coxph(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = SJsurvmergedfilter3)
SJres.cox
ggforest(SJres.cox)
SJres.cox
ggforest(SJres.cox)
SJsurvmergedfilter3$Cancer_Type_Abbrev = relevel(as.factor(SJsurvmergedfilter3$Cancer_Type_Abbrev), ref = "LGG")
coxCancerType = coxph(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = SJsurvmergedfilter3)
summary(coxCancerType)
pairwise_survdiff(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = SJsurvmergedfilter3, p.adjust.method = "BH")
ggforest(coxCancerType)
coxCancerType = coxph(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = SJsurvmergedfilter3)
summary(coxCancerType)
#subsetting appropriate columns for CBTN
CBTNsubset <- subset(CBTNsurvallfiltered2, select = c("Patient_ID", "Cancer_Type_Abbrev", "ecDNA", "OS_Status", "OS_Months", "OS_Months_5yrCensor", "OS_Status_5yrCensor"))
SJsubset <- subset(SJsurvmergedfilter3, select = c("Patient_ID", "Cancer_Type_Abbrev", "ecDNA", "OS_Status", "OS_Months", "OS_Months_5yrCensor", "OS_Status_5yrCensor"))
combinedsurv <- rbind(CBTNsubset, SJsubset)
fitcombined <- survfit(Surv(OS_Months, OS_Status) ~ ecDNA, data = combinedsurv)
plot(fitcombined, col = c("red", "blue"), xlab = "Months", ylab="Survival", lwd = 2)
legend(x=60, y=1, c("ecDNA- (n = 692)", "ecDNA+ (n = 125)"), col = c("red", "blue"), lty=c(1,1))
ggsurvplot(fitcombined, conf.int=TRUE, pval=TRUE, risk.table=TRUE,
legend.labs=c("ecDNA-", "ecDNA+"), legend.title="ecDNA status",
palette=c("dodgerblue2", "orchid2"),
title="Kaplan-Meier Curve for Pediatric cancer survival by ecDNA status",
risk.table.height=.15)
summary(fitcombined)
survdiff(Surv(OS_Months, OS_Status) ~ ecDNA, data = combinedsurv)
fitcombinedcensor <- survfit(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ ecDNA, data = combinedsurv)
plot(fitcombinedcensor, col = c("red", "blue"), xlab = "Months", ylab="Survival", lwd = 2)
legend(x=60, y=1, c("ecDNA- (n = 692)", "ecDNA+ (n = 125)"), col = c("red", "blue"), lty=c(1,1))
ggsurvplot(fitcombinedcensor, conf.int=TRUE, pval=TRUE, risk.table=TRUE,
legend.labs=c("ecDNA-", "ecDNA+"), legend.title="ecDNA status",
palette=c("dodgerblue2", "orchid2"),
title="Kaplan-Meier Curve for Pediatric cancer survival by ecDNA status",
risk.table.height=.15)
summary(fitcombinedcensor)
survdiff(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ ecDNA, data = combinedsurv)
combinedecDNAres.cox <- coxph(Surv(OS_Months, OS_Status) ~ ecDNA, data = combinedsurv)
combinedecDNAres.cox
summary(combinedecDNAres.cox)
ggforest(combinedecDNAres.cox)
combinedres.cox <- coxph(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = combinedsurv)
combinedres.cox
ggforest(combinedres.cox)
combinedsurv$Cancer_Type_Abbrev = relevel(as.factor(combinedsurv$Cancer_Type_Abbrev), ref = "LGG")
coxcombined = coxph(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = combinedsurv)
summary(coxcombined)
pairwise_survdiff(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = combinedsurv, p.adjust.method = "BH")
ggforest(coxcombined)
pairwise_survdiff(Surv(OS_Months, OS_Status) ~ ecDNA + Cancer_Type_Abbrev, data = combinedsurv, p.adjust.method = "BH")
#Anova testing for looking at association of ecDNA and cancer type (not including survival data)
fit.aovcombined = aov(ecDNA ~ Cancer_Type_Abbrev, data = combinedsurv)
fit.aovcombined
TukeyHSD(fit.aovcombined)
ampanalysisfiltered1 <- subset(deduplicated_amplicons, select = c("sample_ID", "sample_name", "amplicon_type", "gene"))
names(ampanalysisfiltered1) = c("Sample_ID", "sample_name", "amplification_type", "gene")
View(ampanalysisfiltered1)
SJamplicontype <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/stjude/PedPanCancer_StJude_MasterAnalysis_Copy.xlsx")
SJamplicontypesubset <- subset(SJamplicontype, select = c("Patient_ID", "amplicon_type"))
#Read in survival data
na_strings <- c("NA", "n/a", "Not Available", "Not Reported")
SJsurv <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/stjude/survival_data/SJ_SurvivalAnalysis.xlsx", na = na_strings)
Mastersurv <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/stjude/survival_data/SJ_SurvivalMaster.xlsx", na = na_strings)
#Merge survival data with patient IDs
SJsurvmerged <- complete(SJsurv, Sample_ID) %>%
inner_join(., Mastersurv)
#Merge amplicon data with survival data
SJsurvmerged1 <- merge(SJsurvmerged, SJamplicontypesubset, by="Patient_ID")
SJsurvmerged1$"Overall Survival in Months"<-gsub("m","",as.character(SJsurvmerged1$"Overall Survival in Months"))
SJsurvmerged1$"Survival Status"<-gsub("Expired","1",as.character(SJsurvmerged1$"Survival Status"))
SJsurvmerged1$"Survival Status"<-gsub("Alive","0",as.character(SJsurvmerged1$"Survival Status"))
SJsurvmergedfilter1 <- subset(SJsurvmerged1, select = c("Sample_ID", "Patient_ID", "tumor_type", "ecDNA", "Survival Status", "Overall Survival in Months", "amplicon_type"))
names(SJsurvmergedfilter1) = c("Sample_ID", "Patient_ID", "Cancer_Type_Abbrev", "ecDNA", "OS_Status", "OS_Months", "amplicon_type")
SJsurvmergedfilter1$OS_Months <- lapply(SJsurvmergedfilter1$OS_Months, as.integer)
SJsurvmergedfilter1$OS_Months <- as.numeric(as.integer(SJsurvmergedfilter1$OS_Months))
SJsurvmergedfilter1$OS_Status <- as.numeric(as.character(SJsurvmergedfilter1$OS_Status))
SJsurvmergedfilter1 <- cbind(SJsurvmergedfilter1,SJsurvmergedfilter1[,5])
SJsurvmergedfilter1 <- cbind(SJsurvmergedfilter1,SJsurvmergedfilter1[,6])
names(SJsurvmergedfilter1) = c("Sample_ID", "Patient_ID", "Cancer_Type_Abbrev", "ecDNA", "OS_Status", "OS_Months", "amplicon_type", "OS_Status_5yrCensor", "OS_Months_5yrCensor")
SJsurvmergedfilter1$OS_Status_5yrCensor[SJsurvmergedfilter1$OS_Months >=60] <- 0
SJsurvmergedfilter1$OS_Months_5yrCensor[SJsurvmergedfilter1$OS_Months >=60] <- 60
#merge ampanalysis and survival data
SJampsurv <- complete(SJsurvmergedfilter1, Sample_ID) %>%
inner_join(., ampanalysisfiltered1)
#eliminate patients without survival data
SJampsurvfilter <- SJampsurv[!(is.na(SJampsurv$"OS_Months")) & !(is.na(SJampsurv$"OS_Status")),]
#Reorder columns
SJampsurvfilter1 <- SJampsurvfilter[,c(1,2,3,4,7,5,6,8,9,10,11,12)]
View(SJampsurvfilter1)
#reading in CBTN cohort with matched sample data
CBTNbysample <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/cbtn/PedPanCancer_CBTNSurvAnalysisbySample.xlsx", na = na_strings)
#subsetting for desired columns
CBTNbysamplesubset <- subset(CBTNbysample, select = c("Specimen_ID", "Patient_ID", "ecDNA", "Cancer_Type", "OS_STATUS", "OS_MONTHS"))
#Reading in data with amplicon type
CBTNsurvallfiltered <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/cbtn/PedPanCancer_CBTN_SurvAnalysis.xlsx", na = na_strings)
CBTNsurvallsubset <- subset(CBTNsurvallfiltered, select = c("Patient_ID","amplicon_type"))
#Editing data
CBTNbysamplesubset$"OS_STATUS"<-gsub("1:DECEASED","1",as.character(CBTNbysamplesubset$"OS_STATUS"))
CBTNbysamplesubset$"OS_STATUS"<-gsub("0:LIVING","0",as.character(CBTNbysamplesubset$"OS_STATUS"))
CBTNbysamplesubset <- cbind(CBTNbysamplesubset,CBTNbysamplesubset[,5])
CBTNbysamplesubset <- cbind(CBTNbysamplesubset,CBTNbysamplesubset[,6])
names(CBTNbysamplesubset) = c("Sample_ID", "Patient_ID", "ecDNA", "Cancer_Type_Abbrev","OS_Status", "OS_Months", "OS_Status_5yrCensor", "OS_Months_5yrCensor")
CBTNbysamplesubset$OS_Status_5yrCensor[CBTNbysamplesubset$OS_Months >=60] <- 0
CBTNbysamplesubset$OS_Months_5yrCensor[CBTNbysamplesubset$OS_Months >=60] <- 60
#merge amplicon type and CBTN survival data
CBTNampsurv <- complete(CBTNbysamplesubset, Patient_ID) %>%
inner_join(., CBTNsurvallsubset)
#merge ampanalysis and survival data
CBTNampsurv1 <- complete(CBTNampsurv, Sample_ID) %>%
inner_join(., ampanalysisfiltered1)
#removing rows w/o survival data
CBTNampsurvfiltered <- CBTNampsurv1[!(is.na(CBTNampsurv1$OS_Months)) & !(is.na(CBTNampsurv1$OS_Status)),]
#change order of dataframe for CBTN
CBTNampsurvfiltered <- CBTNampsurvfiltered[,c(1,2,4,3,9,5,6,7,8,10,11,12)]
View(CBTNampsurvfiltered)
View(SJsurvmergedfilter1)
View(CBTNbysamplesubset)
View(CBTNampsurvfiltered)
AmpSurvAll <- rbind(CBTNampsurvfiltered, SJampsurvfilter1)
#change OS Status from character to numeric
AmpSurvAll$OS_Status <- as.numeric(as.character(AmpSurvAll$OS_Status))
#CBTN and SJ data joined including samples which lack survival data
AmpAll <- rbind(CBTNampsurv1, SJampsurv)
#combining CBTN and SJ data without the amplified gene data
AmpliconSurvAll <- rbind (CBTNampsurv, SJsurvmergedfilter1)
View(AmpliconSurvAll)
#change OS Status from character to numeric
AmpliconSurvAll$OS_Status <- as.numeric(as.character(AmpliconSurvAll$OS_Status))
AmpliconSurvAll$OS_Status_5yrCensor <- as.numeric(as.character(AmpliconSurvAll$OS_Status_5yrCensor))
#removing duplicate patient_IDs
AmpliconSurvAllfiltered <- AmpliconSurvAll %>% distinct(Patient_ID, .keep_all = TRUE)
#eliminate samples without survival data
AmpliconSurvAllfiltered1 <- AmpliconSurvAllfiltered[!(is.na(AmpliconSurvAllfiltered$OS_Months)) & !(is.na(AmpliconSurvAllfiltered$OS_Status)),]
#eliminate samples with cancer types that don't contain ecDNA
AmpliconSurvAllfiltered2 <- subset(AmpliconSurvAllfiltered1, Cancer_Type_Abbrev == "ACT" | Cancer_Type_Abbrev == "BT" | Cancer_Type_Abbrev == "CPC" | Cancer_Type_Abbrev == "CPG" | Cancer_Type_Abbrev == "HGG" | Cancer_Type_Abbrev == "EP" | Cancer_Type_Abbrev == "GG" | Cancer_Type_Abbrev == "LGG" | Cancer_Type_Abbrev == "MB" | Cancer_Type_Abbrev == "MPNST" | Cancer_Type_Abbrev == "MST" | Cancer_Type_Abbrev == "NBL" | Cancer_Type_Abbrev == "OS" | Cancer_Type_Abbrev == "ETMR" | Cancer_Type_Abbrev == "PB" | Cancer_Type_Abbrev == "RB" | Cancer_Type_Abbrev == "RHB" | Cancer_Type_Abbrev == "ST")
fitamplicontype <- survfit(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ amplicon_type, data = AmpliconSurvAllfiltered2)
plot(fitamplicontype, col = c("red", "blue", "green", "orange", "purple"), xlab = "Months", ylab="Survival", lwd = 2)
legend(x=30, y=1, c("cyclic", "complex non cyclic", "linear amplification", "no amplicon"), col = c("red", "blue", "green", "orange"), lty=c(1,1))
survdiff(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ amplicon_type, data = AmpliconSurvAllfiltered2)
amplicontypesurvplot <- ggsurvplot(fitamplicontype, conf.int=TRUE, pval=TRUE, risk.table=TRUE,
legend.labs=c("cyclic", "BFB", "complex non cyclic", "linear amplification", "no amplicon"), legend.title="amplicon status",
palette=c("red", "blue", "green", "orange", "purple"),
title="Kaplan-Meier Curve for Pediatric cancer survival by amplicon status",
risk.table.height=.15)
ggsurvplot(fitamplicontype)
fitamplicontypecox = coxph(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ amplicon_type, data = AmpliconSurvAllfiltered2)
summary(fitamplicontypecox)
ggforest(fitamplicontypecox)
pairwise_survdiff(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ amplicon_type, data = AmpliconSurvAllfiltered2, p.adjust.method = "BH")
AmpliconSurvAllfiltered2 <- within(AmpliconSurvAllfiltered2, {
amplicon_type <- factor(amplicon_type, labels = c("cyclic", "BFB", "complex non cyclic", "linear amplification", "no amplicon"))
})
AmpliconSurvAllfiltered2$amplicon_type = relevel(as.factor(AmpliconSurvAllfiltered2$amplicon_type), ref = "no amplicon")
coxmodel <-
coxph(Surv(OS_Months_5yrCensor, OS_Status_5yrCensor) ~ amplicon_type,
data = AmpliconSurvAllfiltered2 )
ggforest(coxmodel)
#Read in libraries
library(tidyverse)
library(readxl)
library(dplyr)
library("stringr")
library(naniar) #for replace with Nas function
library("survival")
library("survminer")
library(RColorBrewer)
library(janitor)
cbtnmaster <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/cbtn/PedPanCancer_CBTN_MasterAnalysis_OCEdited.xlsx", sheet="1b Samples")
histologies <- read_excel("/Users/sunitasridhar/Desktop/Research/pedpancan/cbtn/histologies-wgs-cohort.xlsx")
#subsetting necessary columns
cbtnmasterfilter <- subset(cbtnmaster, select = c("Cancer_Type", "ecDNA", "Sample ID", "Specimen_ID"))
names(cbtnmasterfilter) <- c("Cancer_Type", "ecDNA_Status", "sample_id", "Specimen_ID")
cbtnmasterfilter <- cbtnmasterfilter[,c(3,1,2,4)]
#changing sample_id to numeric class
transform(cbtnmasterfilter, sample_id = as.character(sample_id))
#merging two datasets
cbtnhistologiesmerged <- left_join(cbtnmasterfilter, histologies, by="sample_id")
#Determine duplicate sample_ids - need to look through these samples, especially those with ecDNA +/-
test <- cbtnhistologiesmerged[duplicated(cbtnhistologiesmerged$sample_id), ]
#subset methylation data and my classifications to see if there is a difference
cbtnhistologiesmerged1 <- subset(cbtnhistologiesmerged, select = c("sample_id", "Cancer_Type", "ecDNA_Status", "Specimen_ID", "Kids_First_Participant_ID", "dkfz_v11_methylation_subclass", "dkfz_v12_methylation_subclass", "dkfz_v12_methylation_mgmt_status", "molecular_subtype", "integrated_diagnosis", "harmonized_diagnosis", "molecular_subtype_methyl"))
#install.packages("remotes")
#remotes::install_github("davidsjoberg/ggsankey")
library(ggsankey)
df <- cbtnhistologiesmerged1 %>%
make_long(Cancer_Type, dkfz_v11_methylation_subclass, dkfz_v12_methylation_subclass, integrated_diagnosis, harmonized_diagnosis)
library(ggplot2)
library(dplyr)
pl <- ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node))
pl <- pl +geom_sankey(flow.alpha = 0.5,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)
#Adding labels
pl <- pl + geom_sankey_label(Size = 3,
color = "black",
fill = "white") # This specifies the Label format for each node
pl <- pl + theme_bw()
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
#ggsave(file = "sankeyplot.jpg", pl)
#subset only ETMR tumor type
cbtnhistologiesmergedETMR <- subset(cbtnhistologiesmerged1, Cancer_Type == "ETMR")
df3 <- cbtnhistologiesmergedETMR %>%
make_long(Kids_First_Participant_ID, Cancer_Type, dkfz_v11_methylation_subclass, dkfz_v12_methylation_subclass, integrated_diagnosis, harmonized_diagnosis)
pl <- ggplot(df3, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node))
pl <- pl +geom_sankey(flow.alpha = 0.3,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)
#Adding labels to the nodes
pl <- pl + geom_sankey_label(size = 2,
color = "black",
fill = "white",
hjust = 0.5) # This specifies the Label format for each node
pl <- pl + theme_bw()
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
#Code to add percentage on the nodes
#Step 1
df3 <- cbtnhistologiesmergedETMR %>%
make_long(Kids_First_Participant_ID, Cancer_Type, dkfz_v11_methylation_subclass, dkfz_v12_methylation_subclass, molecular_subtype, integrated_diagnosis, harmonized_diagnosis)
TotalCount = nrow(df3)
#Step 2
reagg <- df3%>%
dplyr::group_by(node)%>%  # Here we are grouping the data by node and then we are taking the frequency of it
tally()
reagg <- reagg%>%
dplyr::group_by(node)%>%  # Here we are grouping the data by node and then we are taking the frequency of it
dplyr::mutate(pct = n/TotalCount)
df4 <- merge(df3,
reagg,
by.x = 'node',
by.y = 'node',
all.x = TRUE)
pl <- ggplot(df4, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = paste0(node," n=", n, '(',  round(pct* 100,1), '%)' )))             # This Creates a label for each node
pl <- pl +geom_sankey(flow.alpha = 0.8,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)        # This determines if you want your legend to show
pl <- pl + geom_sankey_label(size = 2,
color = "black",
fill = "white",
hjust = 0.5) # This specifies the Label format for each node
pl <- pl + theme_bw()
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
base_size = 5
pl <- pl + theme_sankey(base_size = base_size,
base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22)
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
#ggsave(file = "sankeyplot2.jpg", pl)
cbtnhistologiesmerged2 <- subset(cbtnhistologiesmerged1, Cancer_Type == "ACT" | Cancer_Type == "BT" | Cancer_Type == "CPC" | Cancer_Type == "CPG" | Cancer_Type == "HGG" | Cancer_Type == "EP" | Cancer_Type == "ETMR" | Cancer_Type == "GG" | Cancer_Type == "LGG" | Cancer_Type == "MB" | Cancer_Type == "MPNST" | Cancer_Type == "MST" | Cancer_Type == "NBL" | Cancer_Type == "OS" | Cancer_Type == "PB" | Cancer_Type == "RB" | Cancer_Type == "RHB" | Cancer_Type == "ST")
df2 <- cbtnhistologiesmerged2 %>%
make_long(Cancer_Type, dkfz_v11_methylation_subclass, dkfz_v12_methylation_subclass, integrated_diagnosis, harmonized_diagnosis)
pl <- ggplot(df2, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node))
pl <- pl +geom_sankey(flow.alpha = 0.5,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)  # This determines if you want your legend to show
#Adding labels
pl <- pl + geom_sankey_text(size = 1,
color = "black",
hjust = -0.5) # This specifies the Label format for each node
#pl <- pl +geom_sankey_label(size = 2, color = "black", fill= "white", hjust = -0.1) #changed to text from label
pl <- pl + theme_bw()
pl <- pl + theme_sankey(base_size = 16)
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
ggsave(file = "sankeyplot1.jpg", pl)
#subset only tumor types that have ecDNA
cbtnhistologiesmerged2 <- subset(cbtnhistologiesmerged1, Cancer_Type == "ACT" | Cancer_Type == "BT" | Cancer_Type == "CPC" | Cancer_Type == "CPG" | Cancer_Type == "HGG" | Cancer_Type == "EP" | Cancer_Type == "ETMR" | Cancer_Type == "GG" | Cancer_Type == "LGG" | Cancer_Type == "MB" | Cancer_Type == "MPNST" | Cancer_Type == "MST" | Cancer_Type == "NBL" | Cancer_Type == "OS" | Cancer_Type == "PB" | Cancer_Type == "RB" | Cancer_Type == "RHB" | Cancer_Type == "ST")
df2 <- cbtnhistologiesmerged2 %>%
make_long(Cancer_Type, dkfz_v12_methylation_subclass, harmonized_diagnosis)
pl <- ggplot(df2, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node))
pl <- pl +geom_sankey(flow.alpha = 0.5,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)  # This determines if you want your legend to show
#Adding labels
pl <- pl + geom_sankey_text(size = 1,
color = "black",
hjust = -0.5) # This specifies the Label format for each node
#pl <- pl +geom_sankey_label(size = 2, color = "black", fill= "white", hjust = -0.1) #changed to text from label
pl <- pl + theme_bw()
pl <- pl + theme_sankey(base_size = 16)
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
ggsave(file = "sankeyplot1.jpg", pl)
#subset only tumor types that have ecDNA
cbtnhistologiesmerged2 <- subset(cbtnhistologiesmerged1, Cancer_Type == "ACT" | Cancer_Type == "BT" | Cancer_Type == "CPC" | Cancer_Type == "CPG" | Cancer_Type == "HGG" | Cancer_Type == "EP" | Cancer_Type == "ETMR" | Cancer_Type == "GG" | Cancer_Type == "LGG" | Cancer_Type == "MB" | Cancer_Type == "MPNST" | Cancer_Type == "MST" | Cancer_Type == "NBL" | Cancer_Type == "OS" | Cancer_Type == "PB" | Cancer_Type == "RB" | Cancer_Type == "RHB" | Cancer_Type == "ST")
df2 <- cbtnhistologiesmerged2 %>%
make_long(Cancer_Type, dkfz_v12_methylation_subclass, harmonized_diagnosis)
pl <- ggplot(df2, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node))
pl <- pl +geom_sankey(flow.alpha = 0.5,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)  # This determines if you want your legend to show
#Adding labels
pl <- pl + geom_sankey_text(size = 1,
color = "black",
hjust = -0.5) # This specifies the Label format for each node
#pl <- pl +geom_sankey_label(size = 2, color = "black", fill= "white", hjust = -0.1) #changed to text from label
pl <- pl + theme_bw()
base_size = 5
pl <- pl + theme_sankey(base_size = base_size,
base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22)
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
ggsave(file = "sankeyplot1.jpg", pl)
#subset only tumor types that have ecDNA
cbtnhistologiesmerged2 <- subset(cbtnhistologiesmerged1, Cancer_Type == "ACT" | Cancer_Type == "BT" | Cancer_Type == "CPC" | Cancer_Type == "CPG" | Cancer_Type == "HGG" | Cancer_Type == "EP" | Cancer_Type == "ETMR" | Cancer_Type == "GG" | Cancer_Type == "LGG" | Cancer_Type == "MB" | Cancer_Type == "MPNST" | Cancer_Type == "MST" | Cancer_Type == "NBL" | Cancer_Type == "OS" | Cancer_Type == "PB" | Cancer_Type == "RB" | Cancer_Type == "RHB" | Cancer_Type == "ST")
df2 <- cbtnhistologiesmerged2 %>%
make_long(dkfz_v12_methylation_subclass, Cancer_Type, harmonized_diagnosis)
pl <- ggplot(df2, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node))
pl <- pl +geom_sankey(flow.alpha = 0.5,          #This Creates the transparency of your node
node.color = "black",     # This is your node color
show.legend = TRUE)  # This determines if you want your legend to show
#Adding labels
pl <- pl + geom_sankey_text(size = 1,
color = "black",
hjust = -0.5) # This specifies the Label format for each node
#pl <- pl +geom_sankey_label(size = 2, color = "black", fill= "white", hjust = -0.1) #changed to text from label
pl <- pl + theme_bw()
base_size = 5
pl <- pl + theme_sankey(base_size = base_size,
base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22)
pl <- pl + theme(legend.position = 'none')
pl <- pl + theme(axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
pl <- pl + scale_fill_viridis_d(option = "inferno")
pl <- pl + labs(title = "Creating a Sankey Diagram")
pl <- pl + labs(subtitle = "Using tumor classification data")
pl <- pl + labs(caption ="Sunita Sridhar" )
pl <- pl + labs(fill = 'Nodes')
pl
ggsave(file = "sankeyplot1.jpg", pl)
View(cbtnhistologiesmerged2)
